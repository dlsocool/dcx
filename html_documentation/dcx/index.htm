<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<title>DCX - Dialog Control Xtension DLL vVERSION by ClickHeRe</title>

<script type="text/javascript" src="dcx.js"></script>
<link href="dcx.css" rel="stylesheet" type="text/css" />
</head>

<body>
<script type="text/javascript">header();</script>


<table border=0 width="100%" cellspacing=2 cellpadding=2><tr valign=top>
<td class="menuleft">
<script type="text/javascript">menu_left();</script>
</td>

<td>
<!-- Section 1 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="1" href=#>Introduction</a><hr class=t><br />
This DLL lets you add new controls to mIRC dialogs as well as change other features like the visual style, position etc...<br />

<h2>DCX does not support mIRC controls (no mIRC tabs), nor anything related to mIRC normal dialogs except it's menus. DCX
does not work like MDX so please read the manual and see dcx.mrc and dcx_tools.mrc for examples.</h2>

The DLL creates the controls directly on the mIRC dialog and you use clone functions defined by /xdid and $xdid which behave like the regular /did 
and $did to interact with the controls.<br /><br />

The event handling in the DLL is supported by a callback alias supplied by the user when the dialog is marked before 
adding DCX controls. The callback alias is called from within the DLL to ask for info (if you want to modify the 
default behavior in the DLL thus the "callback" type) and will supply the user with the events and parameters of 
these events.<br /><br />

Every function in this DLL returns a value if used with the $dll identifier. <a class=i2>D_OK [function]: [message]</a> 
if successful, <a class=i2>D_ERROR [function]: [message]</a> otherwise.<br /><br />

<a class=i3>NOTE</a>: Mandatory parameters are expressed in <a class=i>[]</a> and optional parameters in 
<a class=i>()</a>.<br /><br />

<a class=i3>NOTE</a>: I strongly suggest you load the <a class=i>dcx_tools.mrc</a> file included in the zip as it 
contains the necessary <a class=i>xdialog</a> and <a class=i>xdid</a> aliases and identifiers needed to use 
the DLL.<br /><br />
</p>

<!-- Section 2 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="2" href=#>DCX Supported Controls</a><hr class=t><br />
The DCX supported controls are extended controls built directly on the mIRC dialog. These are used to extend the 
capabilities of the existing controls in mIRC dialogs which are franckly very limited in use for GUI design.<br /><br />

<a class=i>N.B.</a> Please note that some features of some DCX controls are only available to Windows XP+ machines. 
These commands have the symbol <a class=i3>(XP+)</a> beside their listing.
</p>

<!-- Section 14 -->
<br />
<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="14" href=#>Lastest Features</a><hr class=t><br />
Here will be listed the latest features added. <br /><br />

<ul>
<li><b>17/02/2006</b></li>
<li>Added /xdid -q and -m to the Listview for Group Support <a class=i3>(XP+)</a></li>
<li>Corrected the height of the colorcombo which is now the same as the comboex</li>
<li>Fixed help file typos</li>
<li><b>16/02/2006</b></li>
<li>Added cursor stuff to the DLL via /xdialog -q and /xdid -J</li>
<li><b>15/02/2006</b></li>
<li>Added /xdialog -j</li>
<li>Fixed richedit /xdid -k switch</li>
<li>Fixed a drawing glitch on the box control</li>
<li><b>14/02/2006</b></li>
<li>Added the +ah flags to the /xdid -t command for listview headers</li>
<li>Added /xdid -n to listview to resize header individually after they've been created</li>
<li>Added $xdid().hwidth, .htext and .hicon to the listview</li>
<li>Changed the range values of the trackbar to 32 bit values</li>
<li>Fixed the fact that an undock dialog/@window was displayed when undocked even though it was hidden just before</li>
<li>Fixed $xdid().tooltip on treeview that returned corrupted data</li>
<li><b>11/02/2006</b></li>
<li>Fixed a bug related to XPopup menus not showing properly after merger</li>
</ul>
</p>

<br />
<!-- Section 3 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="3" href=#>General Commands</a><hr class=t><br />
These commands are general DCX commands and not oriented on any particular DCX controls.
</p>


<p align=justify><a><b>• </b></a> <a name="3.1" href=#>Mark</a><hr><br />
This command marks the dialog for future commands.<br /><br />

<b>Syntax :</b><a class=i2> [NAME] [CALLBACK ALIAS]</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[NAME]</a></td><td>Dialog window name.</td></tr>
<tr><td><a class=i2>[CALLBACK ALIAS]</a></td><td>Callback Event alias name.</td></tr>
</table>
<br />
<a class=i2>N.B.</a> This command must be called before every other command or else nothing will work.
</p>

<p align=justify><a><b>• </b></a> <a name="3.20" href=#>Version</a><hr><br />
Returns information on the DLL Version.
</p>



<p align=justify><a><b>• </b></a> <a name="3.3" href=#>GetSystemColor</a><hr><br />
Returns the RGB value of a specific system color.<br /><br />

<b>Syntax :</b><a class=i2> [ATTRIBUTE]</a><br /><br />
<b>Example :</b><a class=i2> //echo -a $dcx(GetSystemColor, COLOR_WINDOW)</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[ATTRIBUTE]</a></td><td>The type of color.</td></tr>
</table>
<br />
<a class=i2>N.B.</a> For a complete listing of possible [ATTRIBUTE] values, see <a href="http://dcx.scriptsdb.org/forum/showthread.php?tid=150">this thread</a>, or <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/getsyscolor.asp">this link</a>.
</p>


<p align=justify><a><b>• </b></a> <a name="3.4" href=#>ColorDialog</a><hr><br />
Opens up the color picker dialog and returns the selected color.<br /><br />

<b>Syntax :</b><a class=i2> (DEFAULT) (STYLES)</a><br /><br />
<b>Example :</b><a class=i2> //echo -a $dcx(ColorDialog, $rgb(255,0,0) fullopen owner dcx anycolor)</a><br />
<b>Example :</b><a class=i2> //echo -a $dcx(ColorDialog, $rgb(0,0,255) owner $window(@test).hwnd solidonly)</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>(DEFAULT)</a></td><td>The color selected when the dialog opens.</td></tr>
<tr><td><a class=i2>(STYLES)</a></td><td>Various options for the color dialog.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class="i">anycolor</a></td><td>Displays all available colors in the set of basic colors.</td></tr>
<tr><td><a class="i">fullopen</a></td><td>Displays the additional controls that allow the user to create custom colors.</td></tr>
<tr><td><a class="i">nofullopen</a></td><td>Disables the <b>Define Custom Color</b> button.</td></tr>
<tr><td><a class="i">solidonly</a></td><td>Display only solid colors in the set of basic colors.</td></tr>
<tr><td><a class="i">owner [DNAME|HWND]</a></td><td>Allows you to specific the parent control.</td></tr>
</table>
</td></tr>
</table>

<br />

<a class=i2>N.B.</a> By default, the color dialog sets the main mIRC window to be its parent.</a><br />
<a class=i2>N.B.</a> Dialog name OR a hWnd MUST follow after the owner style. Enter 0 for the hWnd to make it modeless</a>.<br />
</p>



            <p>&nbsp;</p>
            <p align="justify"><a><b>• </b></a> <a href="#" name="3.5" id="3.5">OpenDialog/SaveDialog</a></p>
            <hr />
            <br />
Opens up the Open/Save file dialog and returns the selected file.<br />
            <br />

            <b>Syntax :</b><a class="i2"> (STYLES) [TAB] (FILENAME) [TAB] (FILTER)</a><br />
            <br />
            <b>Example :</b><a class="i2"> //echo -a $dcx(OpenDialog, showhidden filemustexist hidereadonly  $chr(9) c:\boot.ini $chr(9) All Files (*.*)|*.*)</a><br />
            <b>Example :</b><a class="i2"> //echo -a $dcx(SaveDialog, createprompt overwriteprompt owner dcx $chr(9) c:\blah.txt $chr(9) All Files (*.*)|*.*|Music Files|*.mp3;*.wav;*.ogg)</a><br />
            <br />

<b>Parms :</b>
<table>
                <tr>
                    <td><a class="i2">(STYLES)</a></td>
                    <td>Various options for the file dialog.</td>
                </tr>
                <tr>
                    <td height="141">&nbsp;</td>
                    <td>
<b>Value :</b>
<table>
                            <tr>
                                <td><a class="i">createprompt</a></td>
                                <td>If the user enters a filename that does not exist, the dialog asks the user if they want to create it. Returns the filename (without creating it) if they click yes. (OpenDialog only)</td>
                            </tr>
                            <tr>
                                <td><a class="i">enablesizing</a></td>
                                <td>The dialog is resizable.</td>
                            </tr>
                            <tr>
                                <td><a class="i">filemustexist</a></td>
                                <td>If the file doesn't exist in the current directory, the user will get an error prompt. (OpenDialog only)</td>
                            </tr>
                            <tr>
                                <td><a class="i">showhidden</a></td>
                                <td>Forces the showing of system and hidden files, overriding the user setting to show or not show hidden files. A file that is marked both system and hidden is not shown. (2k/XP only)</td>
                            </tr>
                            <tr>
                                <td><a class="i">noreadonly</a></td>
                                <td>Hides the &quot;Open as Read Only&quot; checkbox.</td>
                            </tr>
                            <tr>
                                <td><a class="i">nochangedir</a></td>
                                <td>Restores the current directory to its original value if the user changed the directory while searching for files.  (SaveDialog only)</td>
                            </tr>
                            <tr>
                                <td><a class="i">multisel</a></td>
                                <td>Allows user to select multiple files. (OpenDialog only)</td>
                            </tr>
                            <tr>
                                <td><a class="i">getshortcuts</a></td>
                                <td>Allows dialog box to return the path and file name of the selected shortcut (.LNK files).</td>
                            </tr>
                            <tr>
                                <td><a class="i">nonetwork</a></td>
                                <td>Hides the network button.</td>
                            </tr>
                            <tr>
                                <td><a class="i">norecent</a></td>
                                <td>Does not add a link to the selected file in the file system directory that contains the user's most recently used documents.</td>
                            </tr>
                            <tr>
                                <td><a class="i">novalidate</a></td>
                                <td>The dialog does not validate filenames to check if they're legal.</td>
                            </tr>
                            <tr>
                                <td><a class="i">overwriteprompt</a></td>
                                <td>If the user selects a file that already exists, the dialog asks the user if they want to overwrite it. Returns the filename (without clearing) if they click yes. (SaveDialog only)</td>
                            </tr>
                            <tr>
                                <td><a class="i">pathmustexist</a></td>
                                <td>The dialog does not validate filenames to check if they're legal.</td>
                            </tr>
                            <tr>
                                <td><a class="i">owner [DNAME|HWND]</a></td>
                                <td>Allows you to specific the parent control.</td>
                            </tr>
                        </table></td>
                </tr>
                <tr>
                    <td><a class="i2">(FILENAME)</a></td>
                    <td>If you specify this parameter, it will be the filename in the box when the dialog opens.</td>
                </tr>
                <tr>
                    <td><a class="i2">(FILTER)</a></td>
                    <td>The FILTER parameter is the type of files the user can select, it should be formatted like &quot;Description|Type|Description|Type&quot;.<br />
For example: All Files (*.*)|*.*|Scripts|*.mrc;*.ini;*.txt</td>
                </tr>
            </table>
            <br />

            <a class="i2">N.B.</a> Returns &quot;&quot; when cancelled.<br />
            <a class="i2">N.B.</a> Dialog name OR a hWnd MUST follow after the owner style. Enter 0 for the hWnd to make it modeless.<br />
            <a class="i2">N.B.</a> <a class="i">filemustexist</a> automatically applies <a class="i">pathmustexist</a> when style used.<br />
            <a class="i2">N.B.</a> <a class="i">multisel</a> returns files in this format [PATH]|[FILE1]|[FILE2]|..., where the first token will be the path, and the files are seperated by the | (pipe) character.<br />

            <!-- Section 10 -->
<p><br />
            </p>
            <p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="10" href=#>/xdialog Command</a></p><hr class=t /><br />
The /xdialog command is used to modify a DCX marked dialog.
<br /><br />

<b>Format:</b><a class=i2> /xdialog [-SWITCH] [NAME] (EXTRA)</a><br /><br />

<table>
<tr><td><a class=i2>[-SWITCH]</a></td><td>Switch parameter flags that determine the action to perform on the dialog.</td></tr>
<tr><td><a class=i2>[NAME]</a></td><td>Name of the dialog window.</td></tr>
<tr><td><a class=i2>(EXTRA)</a></td><td>Per command basis extra parameters.</td></tr>
</table>
</p>

<p align=justify><a><b>• </b></a> <a name="10.1" href=#>-a</a><hr><br />
This command lets you animate an opening/closing dialog.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -a dialog [+FLAGS] [DELAY]</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -a dcx +ab 1000</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[+FLAGS]</a></td><td>Animation style flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>a</a></td><td>Shows the window.</td></tr>
<tr><td><a class=i>b</a></td><td>Alpha-Blending fade effect.</td></tr>
<tr><td><a class=i>c</a></td><td>Makes the window appear to collapse inward if <a class=i>+h</a> is used or expand outward if the <a class=i>+a</a> is used. The various direction flags have no effect.</td></tr>
<tr><td><a class=i>h</a></td><td>Hides the window.</td></tr>
<tr><td><a class=i>o</a></td><td>Animates the window from left to right. This flag can be used with roll or slide animation. It is ignored when used with <a class=i>+c</a> or <a class=i>+a</a>.</td></tr>
<tr><td><a class=i>n</a></td><td>Animates the window from right to left. This flag can be used with roll or slide animation. It is ignored when used with <a class=i>+c</a> or <a class=i>+a</a>.</td></tr>
<tr><td><a class=i>s</a></td><td>Uses slide animation. It is ignored when used with <a class=i>+c</a>.</td></tr>
<tr><td><a class=i>v</a></td><td>Animates the window from top to bottom. This flag can be used with roll or slide animation. It is ignored when used with <a class=i>+c</a> or <a class=i>+a</a>.</td></tr>
<tr><td><a class=i>u</a></td><td>Animates the window from bottom to top. This flag can be used with roll or slide animation. It is ignored when used with <a class=i>+c</a> or <a class=i>+a</a>.</td></tr>
</table>
<br />
</td></tr>
<tr><td><a class=i2>[DELAY]</a></td><td>Delay in <a class=i>ms</a> of the animation. (typical system value is 200)</td></tr>
</table>
<br />
<a class=i2>N.B.</a> The default effect is a roll animation.
</p>

<p align=justify><a><b>• </b></a> <a name="10.2" href=#>-b</a><hr><br />
This command lets modify border and style attributes on a dialog.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -b dialog [+FLAGS]</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -b dcx +tyszh</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[+FLAGS]</a></td><td>Border/Window style flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>b</a></td><td>Regular Border.</td></tr>
<tr><td><a class=i>c</a></td><td>Clientedge border.</td></tr>
<tr><td><a class=i>d</a></td><td>Dialog frame border.</td></tr>
<tr><td><a class=i>f</a></td><td>Dialog modal frame border. (Similar to <a class=i>+d</a>)</td></tr>
<tr><td><a class=i>h</a></td><td>Context help ? button. (Needs <a class=i>+y</a> and can't be used with <a class=i>+m</a> or <a class=i>+n</a>)</td></tr>
<tr><td><a class=i>m</a></td><td>Maximize button. (Needs <a class=i>+y</a> and can't be used with <a class=i>+h</a>)</td></tr>
<tr><td><a class=i>n</a></td><td>Minimize button. (Needs <a class=i>+y</a> and can't be used with <a class=i>+h</a>)</td></tr>
<tr><td><a class=i>o</a></td><td>Tool window.</td></tr>
<tr><td><a class=i>s</a></td><td>Staticedge border.</td></tr>
<tr><td><a class=i>t</a></td><td>Titlebar.</td></tr>
<tr><td><a class=i>w</a></td><td>Windowedge border.</td></tr>
<tr><td><a class=i>y</a></td><td>Sysmenu (the little X button)</td></tr>
<tr><td><a class=i>z</a></td><td>Resizeable border.</td></tr>
</table>
</td></tr>
</table>
</p>

<p align=justify><a><b>• </b></a> <a name="10.3" href=#>-c</a><hr><br />
This command lets you create a DCX control on your dialog.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -c dialog [ID] [CONTROL] [X] [Y] [W] [H] (OPTIONS)</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -c dcx 2 pbar 140 30 100 20 smooth notheme</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[ID]</a></td><td>Dialog control ID that will serve as a host for the DCX Control.</td></tr>
<tr><td><a class=i2>[CONTROL]</a></td><td>DCX Control type wanted.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>pbar</a></td><td>Creates a <a href="pbar.htm">Progressbar</a> control.</td></tr>
<tr><td><a class=i>treeview</a></td><td>Creates a <a href="treeview.htm">TreeView</a> control.</td></tr>
<tr><td><a class=i>toolbar</a></td><td>Creates a <a href="toolbar.htm">Toolbar</a> control.</td></tr>
<tr><td><a class=i>statusbar</a></td><td>Creates a <a href="statusbar.htm">Statusbar</a> control.</td></tr>
<tr><td><a class=i>comboex</a></td><td>Creates a <a href="comboex.htm">ComboEx</a> control.</td></tr>
<tr><td><a class=i>listview</a></td><td>Creates a <a href="listview.htm">Listview</a> control.</td></tr>
<tr><td><a class=i>trackbar</a></td><td>Creates a <a href="trackbar.htm">Trackbar</a> control.</td></tr>
<tr><td><a class=i>rebar</a></td><td>Creates a <a href="rebar.htm">Rebar</a> control.</td></tr>
<tr><td><a class=i>colorcombo</a></td><td>Creates a <a href="colorcombo.htm">ColorCombo</a> control.</td></tr>
<tr><td><a class=i>button</a></td><td>Creates a <a href="button.htm">Button</a> control.</td></tr>
<tr><td><a class=i>richedit</a></td><td>Creates a <a href="richedit.htm">RichEdit</a> control.</td></tr>
<tr><td><a class=i>ipaddress</a></td><td>Creates a <a href="ipaddress.htm">IpAddress</a> control.</td></tr>
<tr><td><a class=i>updown</a></td><td>Creates an <a href="updown.htm">UpDown</a> control.</td></tr>
<tr><td><a class=i>webctrl</a></td><td>Creates a <a href="webctrl.htm">Web</a> control.</td></tr>
<tr><td>&nbsp;</td></tr>
<tr><td><a class=i>line</a></td><td>Creates a <a href="line.htm">Line</a> control.</td></tr>
<tr><td><a class=i>box</a></td><td>Creates a <a href="box.htm">Box</a> control.</td></tr>
<tr><td><a class=i>radio</a></td><td>Creates a <a href="radio.htm">Radio</a> control.</td></tr>
<tr><td><a class=i>check</a></td><td>Creates a <a href="check.htm">Check</a> control.</td></tr>
<tr><td><a class=i>edit</a></td><td>Creates a <a href="edit.htm">Edit</a> control.</td></tr>
<tr><td><a class=i>scroll</a></td><td>Creates a <a href="scroll.htm">Scroll</a> control.</td></tr>
<tr><td><a class=i>image</a></td><td>Creates a <a href="image.htm">Image</a> control.</td></tr>
<tr><td><a class=i>list</a></td><td>Creates a <a href="list.htm">List</a> control.</td></tr>
<tr><td><a class=i>link</a></td><td>Creates a <a href="link.htm">Link</a> control.</td></tr>
<tr><td><a class=i>text</a></td><td>Creates a <a href="text.htm">Text</a> control.</td></tr>
<tr><td>&nbsp;</td></tr>
<tr><td><a class=i>divider</a></td><td>Creates a <a href="divider.htm">Divider</a> control.</td></tr>
<tr><td><a class=i>panel</a></td><td>Creates a <a href="panel.htm">Panel</a> control.</td></tr>
<tr><td><a class=i>tab</a></td><td>Creates a <a href="tab.htm">Tab</a> control.</td></tr>
<tr><td>&nbsp;</td></tr>
<tr><td><a class=i>window</a></td><td>Docks a mIRC <a href="window.htm">@window</a>. The first parameter in the 
<a class=i>(OPTIONS)</a> must be the <a class=i3>@window</a> name.</td></tr>
<tr><td><a class=i>dialog</a></td><td>Docks a mIRC <a href="dialog.htm">dialog</a>. The first parameter in the 
<a class=i>(OPTIONS)</a> must be the <a class=i3>dialog</a> name.</td></tr>
</table>
<br />
</td></tr>
<tr><td><a class=i2>[X]</a></td><td>X position of control.</td></tr>
<tr><td><a class=i2>[Y]</a></td><td>Y position of control.</td></tr>
<tr><td><a class=i2>[W]</a></td><td>Width of control.</td></tr>
<tr><td><a class=i2>[H]</a></td><td>Height of control.</td></tr>

<tr><td><a class=i2>(OPTIONS)</a></td><td>Optional styles and options available on each individual controls.</td></tr>
</table>
</p>

<p align=justify><a><b>• </b></a> <a name="10.4" href=#>-d</a><hr><br />
This command lets you delete a DCX control on the dialog.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -d dialog ID</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -d dcx 4</a><br /><br />
<!--<a class=i2>N.B.</a> You can use the <a class=i>*</a> to delete all controls on the dialog.-->
</p>

<p align=justify><a><b>• </b></a> <a name="10.6" href=#>-f</a><hr><br />
This command lets you flash a dialog window.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -f dialog [+FLAGS] [COUNT] [TIMEOUT]</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -f dcx +at 0 1000</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[+FLAGS]</a></td><td>Flash style flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>a</a></td><td>Flash both the window caption and taskbar button. This is equivalent in using the +c and +r flags.</td></tr>
<tr><td><a class=i>c</a></td><td>Flash the window caption.</td></tr>
<tr><td><a class=i>f</a></td><td>Flash continuously until the window comes to the foreground.</td></tr>
<tr><td><a class=i>r</a></td><td>Flash the taskbar button.</td></tr>
<tr><td><a class=i>s</a></td><td>Stop flashing. The system restores the window to its original state.</td></tr>
<tr><td><a class=i>t</a></td><td>Flash continuously, until the +s flag is used.</td></tr>
</table>
<br />
</td></tr>
<tr><td><a class=i2>[COUNT]</a></td><td>Number of times to flash the window.</td></tr>
<tr><td><a class=i2>[TIMEOUT]</a></td><td>Rate at which the window is to be flashed, in <a class=i>milliseconds</a>. If [TIMEOUT] is zero, the function uses the default cursor blink rate.</td></tr>
</table>
</p>

<p align=justify><a><b>• </b></a> <a name="10.7" href=#>-g</a><hr><br />
This command lets you modify the background attributs of the dialog.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -g dialog [+FLAGS] [EXTRA]</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -g dcx +b $rgb(0,0,255)</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[+FLAGS]</a></td><td>Background Flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>b</a></td><td>Background Color.( [EXTRA] is an RGB Color)</td></tr>
</table>
</td></tr>
</table>
</p>

<p align=justify><a><b>• </b></a> <a name="10.8" href=#>-h</a><hr><br />
This command lets you hide the dialog.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -h dialog</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -h dcx</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="10.10" href=#>-j</a><hr><br />
This command lets you force a redraw of all the controls in a dialog.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -j dialog</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -j dcx</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="10.12" href=#>-l</a><hr><br />
This command lets you add <a href="layout.htm">Cell Layout Algorithm</a> rules to your dialog
controls for automatic resizing of the child controls.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -l dialog [COMMAND] [PATH] [TAB] [+FLAGS] [ID] [WEIGHT] [W] [H]</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -l dcx root $chr(9) +pv 0 1 0 0</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -l dcx root 1 2 $chr(9) +fi 7 1 200 300</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -l dcx space 1 $chr(9) + 5 5 5 5</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[COMMAND]</a></td><td>Layout command.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>root</a></td><td>Sets the root cell element.</td></tr>
<tr><td><a class=i>cell</a></td><td>Adds a cell element as a child of another cell element.</td></tr>
<tr><td><a class=i>space</a></td><td>Sets the space padding around a cell element.</td></tr>
<tr><td><a class=i>update</a></td><td>Updates the cell layout (must be used after adding rules or 
changing padding settings to refresh display).</td></tr>
</table>
<br />
</td></tr>
<tr><td><a class=i2>[PATH]</a></td><td>Cell Path from root element (can be <a class=i>root</a> to point 
to root element). See the <a href="layout.htm">Cell Layout Algorithm</a> explanation for concrete examples.</td></tr>
<tr><td><a class=i2>[+FLAGS]</a></td><td>DCX Control type wanted.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>f</a></td><td>Creates a fixed cell element.</td></tr>
<tr><td><a class=i>h</a></td><td>Creates a width fixed cell if used with <a class=i>f</a> or a horizontal cell pane 
if used with <a class=i>p</a>.</td></tr>
<tr><td><a class=i>i</a></td><td>Indicates that the supplied control [ID] is valid and is the child control when 
used with <a class=i>f</a> or <a class=i>l</a>.</td></tr>
<tr><td><a class=i>l</a></td><td>Creates a fill cell element.</td></tr>
<tr><td><a class=i>p</a></td><td>Creates a pane cell element.</td></tr>
<tr><td><a class=i>v</a></td><td>Creates a height fixed cell if used with <a class=i>f</a> or a vertical cell pane 
if used with <a class=i>p</a>.</td></tr>
<tr><td><a class=i>w</a></td><td>When used, it means that the supplied [W] and [H] represent 
the fixed cell width in the applicable direction (if the fixed cell is fixed in width, height or both).</td></tr>
</table>
<br />
</td></tr>
<tr><td><a class=i2>[ID]</a></td><td>ID of the control (used with fixed or fill cells - use 0 if 
no control si to be linked to the cell).</td></tr>
<tr><td><a class=i2>[WEIGHT]</a></td><td>Cell child weight. (used when adding a child cell to a pane cell)</td></tr>
<tr><td><a class=i2>[W]</a></td><td>Fixed width of control (used with fixed cell).</td></tr>
<tr><td><a class=i2>[H]</a></td><td>Fixed height of control. (used with fixed cell)</td></tr>
</table>
<br />
<a class=i2>N.B.</a> If you use the <a class=i>update</a> command in the init event of a dialog, you will have to use
".timer 1 0 xdialog -l dialog update" as a glitch with XP and themes disabled prevents windows from appearing. The timer 
corrects this problem.<br /><br />
<a class=i2>N.B.</a> When using the <a class=i>space</a> command, the [ID] [WEIGHT] [W] [H] are in fact the [LEFT] [TOP] [RIGHT] [BOTTOM] spacings<br /><br />
<a class=i2>N.B.</a> Use the value <a class=i>0</a> for the fields not used as the command expects them to be filled 
even though they aren't used.
</p>

<p align=justify><a><b>• </b></a> <a name="10.13" href=#>-m</a><hr><br />
This command lets you maximize the dialog.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -m dialog</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -m dcx</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="10.14" href=#>-n</a><hr><br />
This command lets you minimize the dialog.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -n dialog</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -n dcx</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="10.17" href=#>-q</a><hr><br />
This command lets you change the dialog cursor.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -q dialog [+FLAGS] [CURSOR|FILENAME]</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -q dcx +r wait</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[+FLAGS]</a></td><td>Cursor flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>f</a></td><td>Cursor is defined in [FILENAME]</td></tr>
<tr><td><a class=i>r</a></td><td>Cursor is a system cursor name in the list below.</td></tr>
</table>
<br />
</td></tr>
<tr><td><a class=i2>[CURSOR]</a></td><td>Cursor system names</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>appstarting</a></td><td>Standard arrow and small hourglass</td></tr>
<tr><td><a class=i>arrow</a></td><td>Standard arrow.</td></tr>
<tr><td><a class=i>cross</a></td><td>Crosshair.</td></tr>
<tr><td><a class=i>hand</a></td><td>Hand.</td></tr>
<tr><td><a class=i>help</a></td><td>Arrow and question mark.</td></tr>
<tr><td><a class=i>ibeam</a></td><td>I-beam.</td></tr>
<tr><td><a class=i>no</a></td><td>Slashed circle.</td></tr>
<tr><td><a class=i>sizeall</a></td><td>Four-pointed arrow pointing north, south, east, and west.</td></tr>
<tr><td><a class=i>sizenesw</a></td><td>Double-pointed arrow pointing northeast and southwest.</td></tr>
<tr><td><a class=i>sizens</a></td><td>Double-pointed arrow pointing north and south.</td></tr>
<tr><td><a class=i>sizenwse</a></td><td>Double-pointed arrow pointing northwest and southeast.</td></tr>
<tr><td><a class=i>sizewe</a></td><td>Double-pointed arrow pointing west and east.</td></tr>
<tr><td><a class=i>uparrow</a></td><td>Vertical arrow.</td></tr>
<tr><td><a class=i>wait</a></td><td>Hourglass.</td></tr>
</table>
<br />
</td></tr>
<tr><td><a class=i2>[FILENAME]</a></td><td>Filename containing the cursor.</td></tr>
</table>
<br />
<a class=i2>N.B.</a> Cursor files need to be <a class=i>.cur</a> or <a class=i>.ani</a>.
</p>

<p align=justify><a><b>• </b></a> <a name="10.18" href=#>-r</a><hr><br />
This command lets you restore the dialog.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -r dialog</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -r dcx</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="10.19" href=#>-s</a><hr><br />
This command lets you show the dialog.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -s dialog</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -s dcx</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="10.24" href=#>-x</a><hr><br />
This command lets you kill (not trigger a close like /dialog -x) the dialog.<br /><br />

<b>Command:</b> <a class=i3>/xdialog -x dialog</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -x dcx</a><br /><br />

<a class=i2>N.B.</a> You will have to use this command to close a dialog if you return <a class=i>noclose</a> in 
the <a class=i>close</a> event. mIRC's /dialog -x will be ineffective to close the dialog.
</p>

<!-- Section 10 -->

<br />
<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="11" href=#>$xdialog Identifier</a><hr class=t><br />
The $xdialog identifier is a given mIRC alias that communicates with the DCX DLL to extract information in DCX dialogs.
<br /><br />

<b>Format:</b><a class=i2> $xdialog( NAME, EXTRA ).prop</a><br /><br />

<table>
<tr><td><a class=i2>[NAME]</a></td><td>Name of the dialog window.</td></tr>
<tr><td><a class=i2>[EXTRA]</a></td><td>Optional parameters needed for a property.</td></tr>
<tr><td><a class=i2>prop</a></td><td>Data retreiving property.</td></tr>
</table>
<br />
<b>Return Value:</b> Will return the desired information if it exists otherwise it will return the $null value.
</p>

<p align=justify><a><b>• </b></a> <a name="11.1" href=#>isid</a><hr><br />
This property retrieves if the given ID exists in the dialog.<br /><br />

<b>Identifier:</b> <a class=i3>$xdialog(dialog, ID).isid</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdialog(dcx, 4).isid</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="11.2" href=#>nextid</a><hr><br />
This property retrieves the next free ID in the dialog.<br /><br />

<b>Identifier:</b> <a class=i3>$xdialog(dialog).nextid</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdialog(dcx).nextid</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="11.3" href=#>id</a><hr><br />
This property retrieves the Nth used ID in the dialog or the total number of used IDs if N is 0.<br /><br />

<b>Identifier:</b> <a class=i3>$xdialog(dialog, N).id</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdialog(dcx, N).id</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="11.4" href=#>ismenu</a><hr><br />
This property retrieves if the dialog displays a menu or not.<br /><br />

<b>Identifier:</b> <a class=i3>$xdialog(dialog).ismenu</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdialog(dcx).ismenu</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="11.5" href=#>mouseid</a><hr><br />
This property retrieves which control the mouse currently hovers.<br /><br />

<b>Identifier:</b> <a class=i3>$xdialog(dialog).mouseid</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdialog(dcx).mouseid</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="11.6" href=#>focusid</a><hr><br />
This property retrieves which control currently has the focus.<br /><br />

<b>Identifier:</b> <a class=i3>$xdialog(dialog).focusid</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdialog(dcx).focusid</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="11.7" href=#>mouse</a><hr><br />
This property retrieves the mouse position from the dialog viewpoint.<br /><br />

<b>Identifier:</b> <a class=i3>$xdialog(dialog).mouse</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdialog(dcx).mouse</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="11.8" href=#>key</a><hr><br />
This property retrieves the selected state of certain input keys during events.<br /><br />

<b>Identifier:</b> <a class=i3>$xdialog(dialog).key</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdialog(dcx).key</a><br /><br />

<b>The return value is binary, which means that you have to use the following code fragment to know if the key identified
by the listed number below is currently selected :</b><br />
<pre>
if ( $xdialog( NAME ).key & KEY_NUM ) {
  ; do action here
}
</pre>

<table cellspacing='2' cellpadding='2'>
<tr><td align='center'><b>KEY_NUM</b></td><td><b>Virtual Key</b></td></tr>
<tr><td align='center'>1</td><td>LEFT Mouse Button</td></tr>
<tr><td align='center'>2</td><td>RIGHT Mouse Button</td></tr>
<tr><td align='center'>4</td><td>MIDDLE Mouse Button</td></tr>
<tr><td align='center'>8</td><td>Left SHIFT</td></tr>
<tr><td align='center'>16</td><td>Left CONTROL</td></tr>
<tr><td align='center'>32</td><td>Left ALT</td></tr>
<tr><td align='center'>64</td><td>Right SHIFT</td></tr>
<tr><td align='center'>128</td><td>Right CONTROL</td></tr>
<tr><td align='center'>256</td><td>Right ALT</td></tr>
</table>
</p>

<br />
<!-- Section 4 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="4" href=#>CallBack Alias Events</a><hr class=t><br />
Every DCX Control fires events upon user action on the control. These events are sent to an <a class=i2>alias</a> passed as a parameter when a dialog is <a class=i href="#3.1">Marked</a> to receive input from the DCX DLL and to add controls on it. <br /><br />

Why are the events not sent like regular on *:DIALOG: events?<br /><br />

Well for one thing, mIRC events are linear and static in the way that you cannot return any value to the event manager to modify the default behavior of the event. Using callback support with an <a class=i2>alias</a> enables this type of interaction.<br /><br />

<b>Format : </b> <a class=i2>[NAME] [EVENT] [ID] [VALUE]</a><br /><br />

<table>
<tr><td><a class=i2>[NAME]</a></td><td>Name of the dialog you gave when the <b>Mark</b> command was given. (<a class=i>parameter $1</a>)</td></tr>
<tr><td><a class=i2>[EVENT]</a></td><td>Name of the event (see each control for the events they support). e.g. sclick, dclick, ... (<a class=i>parameter $2</a>)</td></tr>
<tr><td><a class=i2>[ID]</a></td><td>Dialog Item ID of the control that fired the event. (<a class=i>parameter $3</a>)</td></tr>
<tr><td><a class=i2>[VALUE]</a></td><td>Per Control basis extra value passed down in the event callback alias (usually $null except specified otherwise in each control's events) (<a class=i>parameters $4-</a>)</td></tr>
</table>
<br />
<b>Return Value:</b> Some events can return a special value that will interact with the DLL modifying the default event behavior. The events that support a return value will have a description of what the return value does when returned: <a class=i>Return:</a> <a class=i2>value</a><br /><br />

A short example to illustrate the concept: You have a listview control in report view with headers and the user drags the header separator to resize the headers. In a normal linear static event handler you can't stop on the fly the resizing of the headers, but with callback support you can, because when you receive the event in the form of a <a class=i3>trackbegin</a> message you will return nothing if you want to let the tracking procede or you can return the <a class=i3>notrack</a> value and the DLL will then modify it's behavior to block header resizing.
</p>

<!-- Section 9 -->

<br />
<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="9" href=#>/xdid Command</a><hr class=t><br />
The /xdid command is used to add/modify/remove the contents of a DCX control as well as other general features (<a class=i>Later I will add functionnality for certain mIRC controls.</a>).
<br /><br />

<b>Format:</b><a class=i2> /xdid [-SWITCH] [NAME] [ID] (EXTRA)</a><br /><br />

<table>
<tr><td><a class=i2>[-SWITCH]</a></td><td>Switch parameter flags that determine the action to perform on the control. See the control you are seeking to target for information on these flags</td></tr>
<tr><td><a class=i2>[NAME]</a></td><td>Name of the dialog window.</td></tr>
<tr><td><a class=i2>[ID]</a></td><td>ID number of the control that you want to retreive some info from.</td></tr>
<tr><td><a class=i2>(EXTRA)</a></td><td>Per control basis extra parameters passed down to get control data.</td></tr>
</table>
</p>

<p align=justify><a><b>• </b></a> <a name="9.2" href=#>-b</a><hr><br />
This command lets you disable the control.<br /><br />

<b>Command:</b> <a class=i3>/xdid -b dialog ID</a><br /><br />
<b>Example:</b> <a class=i3>/xdid -b dcx 4</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="9.5" href=#>-e</a><hr><br />
This command lets you enable the control.<br /><br />

<b>Command:</b> <a class=i3>/xdid -e dialog ID</a><br /><br />
<b>Example:</b> <a class=i3>/xdid -e dcx 4</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="9.6" href=#>-f</a><hr><br />
This command lets you change a control font.<br /><br />

<b>Command:</b> <a class=i3>/xdid -f dialog ID [+FLAGS] [CHARSET] [SIZE] [FONTNAME]</a><br /><br />
<b>Example:</b> <a class=i3>/xdid -f dcx 4 +abs 10 Tahoma</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[+FLAGS]</a></td><td>Font style flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>a</a></td><td>Font is anti-aliased.</td></tr>
<tr><td><a class=i>b</a></td><td>Font is <b>bold</b>.</td></tr>
<tr><td><a class=i>d</a></td><td>Default font.([CHARSET], [SIZE] and [FONTNAME] can be omitted)</td></tr>
<tr><td><a class=i>i</a></td><td>Font is <i>italic</i>.</td></tr>
<tr><td><a class=i>s</a></td><td>Font is <s>strikedout</s>.</td></tr>
<tr><td><a class=i>u</a></td><td>Font is <u>underlined</u>.</td></tr>
</table>
<br />
</td></tr>
<tr><td><a class=i2>[CHARSET]</a></td><td>Can be any of the following: ansi, baltic, chinesebig, default, 
easteurope, gb2312, greek, hangul, mac, oem, russian, shiftjis, symbol, turkish, vietnamese.</td></tr>
<tr><td><a class=i2>[SIZE]</a></td><td>Font size in points.</td></tr>
<tr><td><a class=i2>[FONTNAME]</a></td><td>Font name. Ex: Tahoma, Courier New, Arial, ....</td></tr>
</table>
<br />
<a class=i2>N.B.</a> Font names are limited to <a class=i>31</a> chars (system definition).
</p>

<p align=justify><a><b>• </b></a> <a name="9.8" href=#>-h</a><hr><br />
This command lets you hide the control.<br /><br />

<b>Command:</b> <a class=i3>/xdid -h dialog ID</a><br /><br />
<b>Example:</b> <a class=i3>/xdid -h dcx 4</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="9.16" href=#>-p</a><hr><br />
This command lets you move/resize the control.<br /><br />

<b>Command:</b> <a class=i3>/xdid -p dialog ID [X] [Y] [W] [H]</a><br /><br />
<b>Example:</b> <a class=i3>/xdid -p dcx 4 10 10 200 120</a><br /><br />

<table>
<tr><td><a class=i2>[X]</a></td><td>X position of control.</td></tr>
<tr><td><a class=i2>[Y]</a></td><td>Y position of control.</td></tr>
<tr><td><a class=i2>[W]</a></td><td>Width of control.</td></tr>
<tr><td><a class=i2>[H]</a></td><td>Height of control.</td></tr>
</table>
<a class=i2>N.B.</a> Will send a <a class=i>sizing</a> event.
</p>

<p align=justify><a><b>• </b></a> <a name="9.19" href=#>-s</a><hr><br />
This command lets you show the control.<br /><br />

<b>Command:</b> <a class=i3>/xdid -s dialog ID</a><br /><br />
<b>Example:</b> <a class=i3>/xdid -s dcx 4</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="9.24" href=#>-x</a><hr><br />
This command lets you modify the border styles of the control.<br /><br />

<b>Command:</b> <a class=i3>/xdid -x dialog ID [+FLAGS]</a><br /><br />
<b>Example:</b> <a class=i3>/xdid -x dcx 4 +w</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[+FLAGS]</a></td><td>Border style flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>b</a></td><td>Regular Border.</td></tr>
<tr><td><a class=i>c</a></td><td>Clientedge border.</td></tr>
<tr><td><a class=i>d</a></td><td>Dialog frame border.</td></tr>
<tr><td><a class=i>f</a></td><td>Dialog modal frame border. (Similar to <a class=i>+d</a>)</td></tr>
<tr><td><a class=i>s</a></td><td>Staticedge border.</td></tr>
<tr><td><a class=i>w</a></td><td>Windowedge border.</td></tr>
</table>
</td></tr>
</table>
</p>

<p align=justify><a><b>• </b></a> <a name="9.29" href=#>-C</a><hr><br />
This command lets you modify the colors of the control.<br /><br />

<b>Command:</b> <a class=i3>/xdid -C dialog ID [+FLAGS] [COLOR]</a><br /><br />
<b>Example:</b> <a class=i3>/xdid -C dcx 4 +bk $rgb(0,0,255)</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[+FLAGS]</a></td><td>Color Flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>b</a></td><td>Background Color.</td></tr>
<tr><td><a class=i>k</a></td><td>Text Background Color.</td></tr>
<tr><td><a class=i>t</a></td><td>Text Color.</td></tr>
</table>
</td></tr>
</table>
<br />
<b>Controls affected by color changes:</b>
<table>
<tr><td>Background Color:</td><td>Edit, Radio, Check, Box, Scroll, Text, List, Panel, Image</td></tr>
<tr><td>Background Text Color:</td><td>Text, Edit, List, Box (Line Color)</td></tr>
<tr><td>Text Color:</td><td>Text, Edit, List, Box</td></tr>
</table>
</p>

<p align=justify><a><b>• </b></a> <a name="9.32" href=#>-F</a><hr><br />
This command lets you set the focus on the control.<br /><br />

<b>Command:</b> <a class=i3>/xdid -F dialog ID</a><br /><br />
<b>Example:</b> <a class=i3>/xdid -F dcx 4</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="9.36" href=#>-q</a><hr><br />
This command lets you change the dialog cursor.<br /><br />

<b>Command:</b> <a class=i3>/xdid -J dialog ID [+FLAGS] [CURSOR|FILENAME]</a><br /><br />
<b>Example:</b> <a class=i3>/xdialog -J dcx 4 +r wait</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[+FLAGS]</a></td><td>Cursor flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>f</a></td><td>Cursor is defined in [FILENAME]</td></tr>
<tr><td><a class=i>r</a></td><td>Cursor is a system cursor name in the list below.</td></tr>
</table>
<br />
</td></tr>
<tr><td><a class=i2>[CURSOR]</a></td><td>Cursor system names</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>appstarting</a></td><td>Standard arrow and small hourglass</td></tr>
<tr><td><a class=i>arrow</a></td><td>Standard arrow.</td></tr>
<tr><td><a class=i>cross</a></td><td>Crosshair.</td></tr>
<tr><td><a class=i>hand</a></td><td>Hand.</td></tr>
<tr><td><a class=i>help</a></td><td>Arrow and question mark.</td></tr>
<tr><td><a class=i>ibeam</a></td><td>I-beam.</td></tr>
<tr><td><a class=i>no</a></td><td>Slashed circle.</td></tr>
<tr><td><a class=i>sizeall</a></td><td>Four-pointed arrow pointing north, south, east, and west.</td></tr>
<tr><td><a class=i>sizenesw</a></td><td>Double-pointed arrow pointing northeast and southwest.</td></tr>
<tr><td><a class=i>sizens</a></td><td>Double-pointed arrow pointing north and south.</td></tr>
<tr><td><a class=i>sizenwse</a></td><td>Double-pointed arrow pointing northwest and southeast.</td></tr>
<tr><td><a class=i>sizewe</a></td><td>Double-pointed arrow pointing west and east.</td></tr>
<tr><td><a class=i>uparrow</a></td><td>Vertical arrow.</td></tr>
<tr><td><a class=i>wait</a></td><td>Hourglass.</td></tr>
</table>
<br />
</td></tr>
<tr><td><a class=i2>[FILENAME]</a></td><td>Filename containing the cursor.</td></tr>
</table>
<br />
<a class=i2>N.B.</a> Cursor files need to be <a class=i>.cur</a> or <a class=i>.ani</a>.<br /><br />
<a class=i2>N.B.</a> You can't change the cursor on the divider or link control.
</p>

<p align=justify><a><b>• </b></a> <a name="9.39" href=#>-M</a><hr><br />
This command lets you add additional information to a control that can be retrieved later.<br /><br />

<b>Command:</b> <a class=i3>/xdid -M dialog ID [INFO]</a><br /><br />
<b>Example:</b> <a class=i3>/xdid -M dcx 4 Mark info here</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="9.52" href=#>-Z</a><hr><br />
This command lets you scroll a control in the vertical direction where [POS] is a percentage expressing the area to scroll (0 being top and 100 being bottom).<br /><br />

<b>Command:</b> <a class=i3>/xdid -Z dialog ID [POS]</a><br /><br />
<b>Example:</b> <a class=i3>/xdid -Z dcx 4 50</a><br /><br />
</p>

<!-- Section 5 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="5" href=#>$xdid Identifier</a><hr class=t><br />
The $xdid identifier is a given mIRC alias that communicates with the DCX DLL to extract information in DCX controls. (<a class=i>Later I will add functionnality for certain mIRC controls.</a>)
<br /><br />

<b>Format:</b><a class=i2> $xdid( NAME, ID, EXTRA ).prop</a><br /><br />

<table>
<tr><td><a class=i2>[NAME]</a></td><td>Name of the dialog window.</td></tr>
<tr><td><a class=i2>[ID]</a></td><td>ID number of the control that you want to retreive some info from.</td></tr>
<tr><td><a class=i2>[EXTRA]</a></td><td>Per control basis extra parameters passed down to get control data.</td></tr>
<tr><td><a class=i2>prop</a></td><td>Per control basis data retreiving property.</td></tr>
</table>
<br />
<b>Return Value:</b> Will return the desired information if it exists otherwise it will return the $null value.
</p>

<p align=justify><a><b>• </b></a> <a name="5.1" href=#>enabled</a><hr><br />
This property retrieves if a control is enabled or disabled.<br /><br />

<b>Identifier:</b> <a class=i3>$xdid(dialog, ID).enabled</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdid(dcx, 4).enabled</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="5.2" href=#>visible</a><hr><br />
This property retrieves if a control is visible or hidden.<br /><br />

<b>Identifier:</b> <a class=i3>$xdid(dialog, ID).visible</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdid(dcx, 4).visible</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="5.3" href=#>pos</a><hr><br />
This property retrieves the position and size of a control in the format [X] [Y] [W] [H] relative to the parent (which can be the dialog).<br /><br />

<b>Identifier:</b> <a class=i3>$xdid(dialog, ID).pos</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdid(dcx, 4).pos</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="5.4" href=#>dpos</a><hr><br />
This property retrieves the position and size of a control in the format [X] [Y] [W] [H] relative to the dialog.<br /><br />

<b>Identifier:</b> <a class=i3>$xdid(dialog, ID).pos</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdid(dcx, 4).pos</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="5.5" href=#>mark</a><hr><br />
This property retrieves the additional info given to a control with /xdid -M.<br /><br />

<b>Identifier:</b> <a class=i3>$xdid(dialog, ID).mark</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdid(dcx, 4).mark</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="5.6" href=#>hwnd</a><hr><br />
This property retrieves the window handle (HWND) of a control.<br /><br />

<b>Identifier:</b> <a class=i3>$xdid(dialog, ID).hwnd</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdid(dcx, 4).hwnd</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="5.7" href=#>mouse</a><hr><br />
This property retrieves the mouse position from the control viewpoint.<br /><br />

<b>Identifier:</b> <a class=i3>$xdid(dialog, ID).mouse</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdid(dcx, 4).mouse</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="5.8" href=#>pid</a><hr><br />
This property retrieves the control ID of the parent of a control (0 if a dialog is the parent).<br /><br />

<b>Identifier:</b> <a class=i3>$xdid(dialog, ID).pid</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdid(dcx, 4).pid</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="5.8" href=#>type</a><hr><br />
This property retrieves the control type.<br /><br />

<b>Identifier:</b> <a class=i3>$xdid(dialog, ID).type</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xdid(dcx, 4).type</a><br /><br />
</p>

<!-- Section 8 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="8" href=#>Dialog Events</a><hr class=t><br />
These events are fired when events occur in the dialog itself.
<br /><br />
</p>

<table width='100%'><tr><td align='center'>
<table width='95%'>

<tr>
  <td><a class=i2>close</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the X button is clicked on a dialog.</td>
</tr>
<tr>
  <td colspan=2>&nbsp;</td>
  <td><a class=i>N.B.</a> You will have to use /xdialog -x to close the dialog instead of mIRC's /dialog -x if you return <a class=i3>noclose</a> on this event.</td>
</tr>
<tr><td colspan=2>&nbsp;</td>
<td>
  <table>
  <tr><td nowrap="nowrap"><a class=i2>Return</a></td><td width=100%><a class=i3>noclose</a> -> Return this value to block the window closing.</td></tr>
  </table>
</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>beginsize</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the dialog is about to be resized.</td>
</tr>
<tr><td colspan=2>&nbsp;</td>
<td>
  <table>
  <tr><td nowrap="nowrap"><a class=i2>Return</a></td><td width=100%><a class=i3>nosize</a> -> Return this value to block the window resizing.</td></tr>
  </table>
</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>sizing</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the dialog is being resized where $3 is the new width and $4 is the new height.</td>
</tr>
<tr><td colspan=2>&nbsp;</td>
<td>
  <table>
  <tr><td nowrap="nowrap"><a class=i2>Return</a></td><td width=100%><a class=i3>nosize</a> -> Return this value to block the window resizing.</td></tr>
  </table>
</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>endsize</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the dialog has finished being resized.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>beginmove</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the dialog is about to be moved.</td>
</tr>
<tr><td colspan=2>&nbsp;</td>
<td>
  <table>
  <tr><td nowrap="nowrap"><a class=i2>Return</a></td><td width=100%><a class=i3>nomove</a> -> Return this value to block the window moving.</td></tr>
  </table>
</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>moving</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the dialog is being moved.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>endmove</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the dialog has finished being moved.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>mouse</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the mouse hovers a control where $3 is the ID of the control (dialog: ID of 0).</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>mouseenter</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the mouse enters a control where $3 is the ID of the control (dialog: ID of 0).</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>mouseleave</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the mouse leaves a control where $3 is the ID of the control (dialog: ID of 0).</td>
</tr>

<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>sclick</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the left mouse button is clicked.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>rclick</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the right mouse button is clicked.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>dclick</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the left mouse button is double-clicked.</td>
</tr>

<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>lbdown</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the left mouse button is pressed.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>lbup</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the left mouse button is released.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>lbdblclk</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the left mouse button is double-clicked.</td>
</tr>

<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>rbdown</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the right mouse button is pressed.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>rbup</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the right mouse button is released.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>rbdblclk</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the right mouse button is double-clicked.</td>
</tr>

<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>mbdown</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the middle mouse button is pressed.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>mbup</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the middle mouse button is released.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>mbdblclk</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the middle mouse button is double-clicked.</td>
</tr>

<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>focus</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>Triggered when a control gains the focus where $3 is the control ID.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>focusout</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>Triggered when a control loses the focus where $3 is the control ID.</td>
</tr>
<tr><td colspan=2>&nbsp;</td></tr>
<tr>
  <td><a class=i2>min</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the dialog is about to be minimized.</td>
</tr>
<tr><td colspan=2>&nbsp;</td>
<td>
  <table>
  <tr><td nowrap="nowrap"><a class=i2>Return</a></td><td width=100%><a class=i3>stop</a> -> Return this value to block the window minimizing.</td></tr>
  </table>
</td>
</tr>
<tr><td colspan=2>&nbsp;</td>
<tr>
  <td><a class=i2>max</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the dialog is about to be maximized.</td>
</tr>
<tr><td colspan=2>&nbsp;</td>
<td>
  <table>
  <tr><td nowrap="nowrap"><a class=i2>Return</a></td><td width=100%><a class=i3>stop</a> -> Return this value to block the window maximizing.</td></tr>
  </table>
</td>
</tr>
<tr><td colspan=2>&nbsp;</td>
<tr>
  <td><a class=i2>restore</a></td><td>&nbsp;&nbsp;</td>
  <td width='100%'>When the dialog is about to be restored.</td>
</tr>


</table>
</td></tr></table>
<br />

<p align=justify>
<b><a class=i>DCX DLL</a></b><hr class=t><br />
- <b>Development</b> -> <a href="mailto:clickhere@scriptsdb.org">ClickHeRe</a><br />
- <b>Supporting Developer</b> -> hixxy<br />
- <b>Supporting Developer</b> -> twig*<br />
- <b>Demo Dialog</b> -> elizio<br />
<br />
- <b>General Testing</b> -> bl0x<br />
- <b>Dutch Translation</b> -> Mpdreamz<br />
- <b>Finnish Translation</b> -> Mkz<br />
- <b>French Translation</b> -> dunkelzahn<br />
- <b>German Translation</b> -> Duplex<br />
- <b>Hebrew Translation</b> -> seec77<br />
- <b>Italian Translation</b> -> Free Spot<br />
- <b>Malaysian Translation</b> -> da^hype<br />
- <b>Portuguese (Brazil) Translation</b> -> Henrique<br />
- <b>Portuguese (Portugal) Translation</b> -> Theorem<br />
- <b>Spanish Translation</b> -> PaTaGoN<br />
- <b>Swedish Translation</b> -> Rixxon<br />
<br />
- #scriptsdb.org @ Undernet @ Webnet<br />
- <a href='http://scriptsdb.org' target="_blank">http://scriptsdb.org</a><br />
</p>

<br /></td>
<td>&nbsp;</td>
<td class="menuright">
<a class=i href="#3">General Commands</a><br />
• <a href="#3.1">Mark</a><br />
• <a href="#3.20">Version</a><br />
• <a href="#3.3">GetSystemColor</a><br />
• <a href="#3.4">ColorDialog</a><br />
• <a href="#3.5">OpenDialog</a><br />
• <a href="#3.5">SaveDialog</a><br />
<br />
<a class=i href="#10">/xdialog Command</a><br />
• <a href="#10.1">-a</a><br />
• <a href="#10.2">-b</a><br />
• <a href="#10.3">-c</a><br />
• <a href="#10.4">-d</a><br />
• <a href="#10.6">-f</a><br />
• <a href="#10.7">-g</a><br />
• <a href="#10.8">-h</a><br />
• <a href="#10.10">-j</a><br />
• <a href="#10.12">-l</a><br />
• <a href="#10.13">-m</a><br />
• <a href="#10.14">-n</a><br />
• <a href="#10.17">-q</a><br />
• <a href="#10.18">-r</a><br />
• <a href="#10.19">-s</a><br />
• <a href="#10.24">-x</a><br />
<br />
<a class=i href="#11">$xdialog Identifier</a><br />
• <a href="#11.1">isid</a><br />
• <a href="#11.2">nextid</a><br />
• <a href="#11.3">id</a><br />
• <a href="#11.4">ismenu</a><br />
• <a href="#11.5">mouseid</a><br />
• <a href="#11.6">focusid</a><br />
• <a href="#11.7">mouse</a><br />
• <a href="#11.8">key</a><br />
<br />
<a class=i href="#4">CallBack Alias Events</a><br />
<br />
<a class=i href="#9">/xdid Command</a><br />
• <a href="#9.2">-b</a><br />
• <a href="#9.5">-e</a><br />
• <a href="#9.6">-f</a><br />
• <a href="#9.8">-h</a><br />
• <a href="#9.16">-p</a><br />
• <a href="#9.19">-s</a><br />
• <a href="#9.24">-x</a><br />
• <a href="#9.29">-C</a><br />
• <a href="#9.32">-F</a><br />
• <a href="#9.36">-J</a><br />
• <a href="#9.39">-M</a><br />
• <a href="#9.52">-Z</a><br />
<br />
<a class=i href="#5">$xdid Identifier</a><br />
• <a href="#5.1">enabled</a><br />
• <a href="#5.2">visible</a><br />
• <a href="#5.3">pos</a><br />
• <a href="#5.4">dpos</a><br />
• <a href="#5.5">mark</a><br />
• <a href="#5.6">hwnd</a><br />
• <a href="#5.7">mouse</a><br />
• <a href="#5.8">pid</a><br />
• <a href="#5.9">type</a><br />
<br />
<a class=i href="#8">Dialog Events</a><br />

<br /></td></tr></table>
<table class=bar width=100%><tr>
<td width=33% align=left><a href='index.htm'> Tha... Help </a></nobr></td>
<td width=33% align=center><b>&copy; 2005</b></nobr></td>
<td width=33% align=right><a href='mailto:clickhere@scriptsdb.org'>Contact</a></nobr></td>
</tr></table><br />
</body></html>