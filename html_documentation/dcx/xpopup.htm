<html>
<head>

<title>DCX - Dialog Control Xtension DLL vVERSION by ClickHeRe</title>
<script type="text/javascript" src="dcx.js"></script>

<style type='text/css'>
body { font-size: 8pt; background: #ffffff; font-family: tahoma; color: #000000; }
table { font-size: 8pt; font-family: tahoma }

table.bar { border-right: #000000 1px solid; border-top: #000000 1px solid; font-size: 8pt; background: #eeeeee; border-left: #000000 1px solid; border-bottom: #000000 1px solid; font-family: tahoma }

a.i3 { font-weight: bold; font-size: 8pt; color: #EE9900; font-family: tahoma; text-decoration: none }
a.i2 { font-weight: bold; font-size: 8pt; color: #009900; font-family: tahoma; text-decoration: none }
a.i2:link { font-weight: bold; font-size: 8pt; color: #009900; font-family: tahoma; text-decoration: none }
a.i2:active { font-weight: bold; font-size: 8pt; color: #009900; font-family: tahoma; text-decoration: none }
a.i2:visited { font-weight: bold; font-size: 8pt; color: #009900; font-family: tahoma; text-decoration: none }
a.i2:hover { font-weight: bold; font-size: 8pt; color: #009900; font-family: tahoma; text-decoration: none }
a.i { font-weight: bold; font-size: 8pt; color: #D60000; font-family: tahoma; text-decoration: none }
a.i:link { font-weight: bold; font-size: 8pt; color: #D60000; font-family: tahoma; text-decoration: none }
a.i:active { font-weight: bold; font-size: 8pt; color: #D60000; font-family: tahoma; text-decoration: none }
a.i:visited { font-weight: bold; font-size: 8pt; color: #D60000; font-family: tahoma; text-decoration: none }
a.i:hover { font-weight: bold; font-size: 8pt; color: #D60000; font-family: tahoma; text-decoration: none }
a { font-weight: bold; font-size: 8pt; color: #002980; font-family: tahoma; text-decoration: none }
a:link { font-weight: bold; font-size: 8pt; color: #002980; font-family: tahoma; text-decoration: none }
a:visited { font-weight: bold; font-size: 8pt; color: #002980; font-family: tahoma; text-decoration: none }
a:active { font-weight: bold; font-size: 8pt; color: #002980; font-family: tahoma; text-decoration: none }
a:hover { font-weight: bold; font-size: 8pt; color: #002980; font-family: tahoma; text-decoration: underline }
hr { font-weight: bold; font-size: 8pt; color: #002980; }
hr.t { font-weight: bold; font-size: 8pt; color: #D60000; }
</style>
</head>
<body topmargin="0" leftmargin="5">
<table border="0" width="100%" cellspacing="0" cellpadding="0" BGCOLOR=#FFFFFF>
<tr><td heigth=200 align=left valign=middle>&nbsp;
<a href="index.htm" title="DCX - Dialog Control Xtension"><img src="../images/dcx.png" border='0'></a>
</td><td valign='bottom' align='right'>
<a href="../nl/index.htm">Dutch</a> |
<a href="../index.htm">English</a> | 
<a href="../fi/index.htm">Finnish</a> |
<a href="../fr/index.htm">French</a> |
<a href="../ge/index.htm">German</a> |
<a href="../he/index.htm">Hebrew</a> |
<a href="../it/index.htm">Italian</a> |
<a href="../my/index.htm">Malaysian</a> |
<a href="../br/index.htm">Portuguese (Brazil)</a> |
<a href="../pt/index.htm">Portuguese</a> |
<a href="../sp/index.htm">Spanish</a> |
<a href="../sw/index.htm">Swedish</a>
</td></tr></table>
<table class=bar width=100%><tr>
<td align=left width=33%><nobr><a href='index.htm'> Home </a> | <a href="http://scriptsdb.org/download.php?id=1155">Download</a> | <a href="http://dcx.scriptsdb.org/forum/">Forum</a> | <a href="http://dcx.scriptsdb.org/bug/">Bug Tracker</a></nobr></td>
<td align=center width=33%><nobr><b>Dialog Control Xtension</b> </nobr></td>
<td align=right width=33%><b> Version <script type="text/javascript">version();</script></b></td></tr></table><br /><table border=0 width="100%" cellspacing=2 cellpadding=2><tr valign=top><td><nobr>
<a class=i href="#1">Introduction</a><br />
<br />
<a class=i href="dcxvsmdx.htm">DCX vs MDX</a><br />
<br />
<a class=i href="#2">DCX Supported Controls</a><br />
• <a href="pbar.htm">Progressbar</a><br />
• <a href="treeview.htm">TreeView</a><br />
• <a href="listview.htm">ListView</a><br />
• <a href="toolbar.htm">Toolbar</a><br />
• <a href="statusbar.htm">Statusbar</a><br />
• <a href="comboex.htm">ComboEx</a><br />
• <a href="trackbar.htm">Trackbar</a><br />
• <a href="rebar.htm">Rebar</a><br />
• <a href="richedit.htm">RichEdit</a><br />
• <a href="colorcombo.htm">ColorCombo</a><br />
• <a href="button.htm">Button</a><br />
• <a href="ipaddress.htm">IP Address</a><br />
• <a href="updown.htm">UpDown</a><br />
• <a href="webctrl.htm">WebControl</a><br />
• <a href="calendar.htm">Calendar</a><br />
<br />
• <a href="line.htm">Line</a><br />
• <a href="box.htm">Box</a><br />
• <a href="radio.htm">Radio</a><br />
• <a href="check.htm">Check</a><br />
• <a href="edit.htm">Edit</a><br />
• <a href="scroll.htm">Scroll</a><br />
• <a href="image.htm">Image</a><br />
• <a href="list.htm">List</a><br />
• <a href="link.htm">Link</a><br />
• <a href="text.htm">Text</a><br />
<br />
• <a href="divider.htm">Divider</a><br />
• <a href="panel.htm">Panel</a><br />
• <a href="tab.htm">Tab</a><br />
<br />
• <a href="window.htm">@Window</a><br />
• <a href="dialog.htm">Dialog</a><br />
<br />
<a class=i href="#15">DCX Supported Features</a><br />
• <a href="layout.htm">Cell Layout Algorithm</a><br />
• <a href="xpopup.htm">XPopup Menus</a><br />
</nobr></td><td>&nbsp;</td><td width=100%>

<!-- Section 1 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="1" href=#>Introduction</a><hr class=t><br />
This extension lets you build nice stylish popup menus to be used everywhere in your script including coloring mIRC's own popup menus. 
<br /><br />

<center><img src="../images/xpopup.png" alt="XPopup Menu Styles"/></center>
</p>

<!-- Section 2 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="2" href=#>General Commands</a><hr class=t><br />
These general commands are used in the xpopup extension.
<br /><br />

<!-- Section 3 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="2" href=#>Special Menus</a><hr class=t><br />

There are two XPopup special menus. They are mIRC's regular popup menus (channel, statusbar, query and nicklist) and mIRC's menubar popup menus which
include (menubar). The use the reserved menu names <a class=i>mirc</a> and <a class=i>mircbar</a>. They can be activated with the following command :<br /><br />

<b>Command:</b> <a class=i3>/mpopup [mirc|mircbar] [1|0]</a><br /><br />

Both menus can have their style, colors and icons modified using the /xpopup command. The command switches -c/-d are disabled for these menus. You 
can't use /xpop to modify these menus either.

To add icons the mIRC's popups menus (status, menubar, channel, query and nicklist) you need to add the icons the menu image lists using /xpopup -i/-j.
The icon index number needs to be inserted in the mIRC popup menu syntax like this :<br /><br />

<b>Syntax:</b> <a class=i3>[$style()] [ICON] [VTAB] [Item Text] [TAB] [Accelerator Text] : [mIRC Command]</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[$style()]</a></td><td>mIRC's $style identifier.</td></tr>
<tr><td><a class=i2>[ICON]</a></td><td>Icon index number. (You can use 0 for no icon).</td></tr>
<tr><td><a class=i2>[VTAB]</a></td><td>mIRC $chr(11).</td></tr>
<tr><td><a class=i2>[Item Text]</a></td><td>Menu item text.</td></tr>
<tr><td><a class=i2>[TAB]</a></td><td>mIRC $chr(9). (Optional)</td></tr>
<tr><td><a class=i2>[Accelerator Text]</a></td><td>Accelerator Text. (Optional)</td></tr>
<tr><td><a class=i2>[mIRC Command]</a></td><td>mIRC menu command.</td></tr>
</table>
<br />
<a class=i2>N.B.</a> Accelerator text is usually a shortcut key combination to the same command seen in the menu that which the text is 
right aligned in the menu item like the <a class=i>CTRL-H</a> seen in the image below.
</p>

Remember that the same mIRC popup rules still apply. It is only the menu item text syntax that needs to be shaped for XPopup to interpret it 
correctly. If the [VTAB] element is not present, XPopup assumes that the item text is a regular no icon element. You can also add $idents in you menu
item text like mIRC has always permitted to create your own tri-state check system for example with the use of custom icons.<br /><br />

The image below is an example of a mIRC menubar popup menu skinned with XPopup which includes icons.<br /><br />

<center><img src="../images/xpopup3.png" alt="XPopup mIRC Colorful Iconed Menus"/></center>
</p>
<br />
<!-- Section 10 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="10" href=#>/xpopup Command</a><hr class=t><br />
The /xpopup command is used to create/modify/destroy an XPopup menu.
<br /><br />

<p align=justify><a><b>• </b></a> <a name="10.2" href=#>-b</a><hr><br />
This command lets you set the menu item background image in CUSTOM style. Please take note that the image is stretched to fit the menu item rectangle.
Only <a class=i>BMP</a> images are supported through this command.<br /><br />

<b>Command:</b> <a class=i3>/xpopup -b [MENU] [IMAGE]</a><br /><br />
<b>Example:</b> <a class=i3>/xpopup -b mymenu $mircdirmc.bmp</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="10.3" href=#>-c</a><hr><br />
This command lets you create an XPopup empty menu. Xpopup menus are <a class=i>permanent</a> until destroyed with <a href="#10.4">/xpopup -d</a> or the DLL is unloaded.<br /><br />

<b>Command:</b> <a class=i3>/xpopup -c [MENU] [STYLE]</a><br /><br />
<b>Example:</b> <a class=i3>/xpopup -c mymenu office2003rev</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[MENU]</a></td><td>Menu name.</td></tr>
<tr><td><a class=i2>[STYLE]</a></td><td>Menu style flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>office2003</a></td><td>Office 2003 Menu Style.</td></tr>
<tr><td><a class=i>office2003rev</a></td><td>Office 2003 Reverse Menu Style.</td></tr>
<tr><td><a class=i>officexp</a></td><td>Office XP Menu Style.</td></tr>
<tr><td><a class=i>icy</a></td><td>Icy Menu Style.</td></tr>
<tr><td><a class=i>icyrev</a></td><td>Icy Reverse Menu Style.</td></tr>
<tr><td><a class=i>grade</a></td><td>Grade Menu Style.</td></tr>
<tr><td><a class=i>graderev</a></td><td>Grade Reverse Menu Style.</td></tr>
<tr><td><a class=i>normal</a></td><td>Normal Plain Menu Style.</td></tr>
<tr><td><a class=i>custom</a></td><td>Let's you apply a custom background item image (see <a href="#10.2">/xpopup -b</a>).</td></tr>
</table>
</td></tr>
</table>
<a class=i2>N.B.</a> This command will fail if the menu already exists, use $xpopup().ismenu to check if the menu exists.
<a class=i2>N.B.</a> Some colors are not used in certain menu styles.
</p>

<p align=justify><a><b>• </b></a> <a name="10.4" href=#>-d</a><hr><br />
This command lets you destroy an XPopup empty menu.<br /><br />

<b>Command:</b> <a class=i3>/xpopup -d [MENU]</a><br /><br />
<b>Example:</b> <a class=i3>/xpopup -d mymenu</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="10.9" href=#>-i</a><hr><br />
This command lets you add an icon to the menu image list.<br /><br />

<b>Command:</b> <a class=i3>/xpopup -i [MENU] [INDEX] [FILENAME]</a><br /><br />
<b>Example:</b> <a class=i3>/xpopup -i mymenu 113 C:/mIRC/shell.dll</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[INDEX]</a></td><td>Icon index in icon archive (use 0 if the file is a single icon file)</td></tr>
<tr><td><a class=i2>[FILENAME]</a></td><td>Icon archive filename</td></tr>
</table>
</p>

<p align=justify><a><b>• </b></a> <a name="10.10" href=#>-j</a><hr><br />
This command lets you clear the menu image list.<br /><br />

<b>Command:</b> <a class=i3>/xpopup -j [MENU]</a><br /><br />
<b>Example:</b> <a class=i3>/xpopup -j mymenu</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="10.12" href=#>-l</a><hr><br />
This command lets you set the Nth color in the menu as given by the order listed in <a href="#10.16">/xpopup -p</a>.<br /><br />

<b>Command:</b> <a class=i3>/xpopup -l [MENU] [N] [COLOR]</a><br /><br />
<b>Example:</b> <a class=i3>/xpopup -l mymenu 2 $rgb(255,0,0)</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="10.16" href=#>-p</a><hr><br />
This command lets you set the whole menu color palette in one command where [COLORS] is a space separated list of RGB colors.<br /><br />

<b>Command:</b> <a class=i3>/xpopup -p [MENU] [COLORS]</a><br /><br />
<b>Example:</b> <a class=i3>/xpopup -p mymenu $rgb(255,0,0) $rgb(0,0,255) ... </a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[COLORS]</a></td><td>The colors are in this order:</td></tr>
<tr><td>&nbsp;</td><td>
<ol>
<li>Menu background color</li>
<li>Icon box color</li>
<li>Checkbox color</li>
<li>Disabled checkbox color</li>
<li>Disabled selection box color</li>
<li>Disabled text color</li>
<li>Selection box color</li>
<li>Selection box border color</li>
<li>Separator line color</li>
<li>Text color</li>
</ol>
</td></tr>
</table>
</p>

<p align=justify><a><b>• </b></a> <a name="10.19" href=#>-s</a><hr><br />
This command lets you display a menu.<br /><br />

<b>Command:</b> <a class=i3>/xpopup -s [MENU] [+FLAGS] [X] [Y]</a><br /><br />
<b>Example:</b> <a class=i3>/xpopup -s mymenu + 100 100</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[MENU]</a></td><td>Menu name.</td></tr>
<tr><td><a class=i2>[+FLAGS]</a></td><td>Menu display style flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>b</a></td><td>The menu is bottom aligned according to the Y value.</td></tr>
<tr><td><a class=i>c</a></td><td>The menu is center aligned according to the X value.</td></tr>
<tr><td><a class=i>l</a></td><td>The menu is left aligned according to the X value.</td></tr>
<tr><td><a class=i>m</a></td><td>The menu items are clickable only with the left mouse button. (default)</td></tr>
<tr><td><a class=i>n</a></td><td>The menu items are clickable only with the right mouse button.</td></tr>
<tr><td><a class=i>r</a></td><td>The menu is right aligned according to the X value.</td></tr>
<tr><td><a class=i>t</a></td><td>The menu is top aligned according to the Y value.</td></tr>
<tr><td><a class=i>v</a></td><td>The menu is vertically center aligned according to the Y valued.</td></tr>
</table>
<br />
</td></tr>
<tr><td><a class=i2>[X]</a></td><td>X coordinate where menu will popup in screen coordinates.</td></tr>
<tr><td><a class=i2>[Y]</a></td><td>Y coordinate where menu will popup in screen coordinates.</td></tr>
</table>
</p>

<p align=justify><a><b>• </b></a> <a name="10.20" href=#>-t</a><hr><br />
This command lets you change the menu style.<br /><br />

<b>Command:</b> <a class=i3>/xpopup -t [MENU] [STYLE]</a><br /><br />
<b>Example:</b> <a class=i3>/xpopup -t mymenu officexp</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="10.24" href=#>-x</a><hr><br />
This command lets you set the menu extended styles.<br /><br />

<b>Command:</b> <a class=i3>/xpopup -x [MENU] [+FLAGS]</a><br /><br />
<b>Example:</b> <a class=i3>/xpopup -x mymenu +dp</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[MENU]</a></td><td>Menu name.</td></tr>
<tr><td><a class=i2>[+FLAGS]</a></td><td>Menu extended style flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>d</a></td><td>Disabled items display a selection box.</td></tr>
<tr><td><a class=i>i</a></td><td>Icons have a 3D shadow effect when menu item is selected.</td></tr>
<tr><td><a class=i>p</a></td><td>Icons have a plain 3D effect when menu item is selected.</td></tr>
</table>
</td></tr>
</table>
</p>

<!-- Section 11 -->

<br />
<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="11" href=#>$xpopup Identifier</a><hr class=t><br />
The $xpopup identifier is a given mIRC alias that communicates with the XPopup DLL to extract information from XPopup menus.
<br /><br />

<p align=justify><a><b>• </b></a> <a name="11.1" href=#>ismenu</a><hr><br />
This property retrieves if a menu exists.<br /><br />

<b>Identifier:</b> <a class=i3>$xpopup(menu).ismenu</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xpopup(mymenu).ismenu</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="11.1" href=#>style</a><hr><br />
This property retrieves the menu style.<br /><br />

<b>Identifier:</b> <a class=i3>$xpopup(menu).style</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xpopup(mymenu).style</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="11.1" href=#>exstyle</a><hr><br />
This property retrieves the menu extended styles.<br /><br />

<b>Identifier:</b> <a class=i3>$xpopup(menu).exstyle</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xpopup(mymenu).exstyle</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="11.1" href=#>colors</a><hr><br />
This property retrieves the menu colors as one line (see <a href="#10.15">/xpopup -p</a> for the list).<br /><br />

<b>Identifier:</b> <a class=i3>$xpopup(menu).colors</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xpopup(mymenu).colors</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="11.2" href=#>color</a><hr><br />
This property retrieves Nth menu color (see <a href="#10.15">/xpopup -p</a> for the list).<br /><br />

<b>Identifier:</b> <a class=i3>$xpopup(menu, N).color</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xpopup(mymenu).color</a><br /><br />
</p>

<!-- Section 9 -->

<br />
<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="9" href=#>/xpop Command</a><hr class=t><br />
The /xpop command is used to add/modify/remove menu items in XPopup menus.
<br /><br />

<p align=justify><a><b>• </b></a> <a name="9.1" href=#>-a</a><hr><br />
This command lets you add a menu item.<br /><br />

<b>Command:</b> <a class=i3>/xpop -a [MENU] [</a><a href="#7">N N .. N</a><a class=i3>] [TAB] [+FLAGS] [ID] [ICON] ItemText</a><br /><br />
<b>Example:</b> <a class=i3>/xpop -a mymenu 1 0 $chr(9) + 1 1 Menu Item 1</a><br /><br />

<b>Parms :</b>
<table>
<tr><td><a class=i2>[MENU]</a></td><td>Menu name.</td></tr>
<tr><td><a class=i2>[+FLAGS]</a></td><td>Menu item flags.</td></tr>
<tr><td>&nbsp;</td><td>
<b>Value :</b>
<table>
<tr><td><a class=i>c</a></td><td>Item is checked.</td></tr>
<tr><td><a class=i>g</a></td><td>Item is disabled/grayed.</td></tr>
<tr><td><a class=i>s</a></td><td>An empty submenu is created for the item ready for menu items.</td></tr>
</table>
<br />
</td></tr>
<tr><td><a class=i2>[ID]</a></td><td>Menu item ID as returned on the event handler. (Must be unique)</td></tr>
<tr><td><a class=i2>[ICON]</a></td><td>Menu item icon index. (Use <a class=i>0</a> for no icon)</td></tr>
<tr><td><a class=i2>ItemText</a></td><td>Menu item text. It can contain <a class=i>mIRC $identifiers</a> that will 
be evaluated the first time the menu is being displayed. If the item text is meant to be dynamic, you will need to reset the text using
<a href="#9.19">/xpop -t</a>.</td></tr>
</table>
<br />
<a class=i2>N.B.</a> A menu item that has a checkmark and an icon displays the icon instead of the checkmark.
<a class=i2>N.B.</a> Remember to use mIRC's $eval(expression,0) to prevent the mIRC evaluation of the $idents that your text contains.
</p>

<p align=justify><a><b>• </b></a> <a name="9.3" href=#>-c</a><hr><br />
This command lets you create a submenu on a menu item.<br /><br />

<b>Command:</b> <a class=i3>/xpop -c [MENU] [</a><a href="#7">N N .. N</a><a class=i3>]</a><br /><br />
<b>Example:</b> <a class=i3>/xpop -c mymenu 1 1</a><br /><br />

<a class=i2>N.B.</a> If the item already has a submenu, it is destroyed. This can be used to clear a submenu instead of deleting the whole menu item.
</p>

<p align=justify><a><b>• </b></a> <a name="9.4" href=#>-d</a><hr><br />
This command lets you destroy a submenu on a menu item.<br /><br />

<b>Command:</b> <a class=i3>/xpop -d [MENU] [</a><a href="#7">N N .. N</a><a class=i3>]</a><br /><br />
<b>Example:</b> <a class=i3>/xpop -d mymenu 1 1</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="9.6" href=#>-f</a><hr><br />
This command lets you delete a menu item.<br /><br />

<b>Command:</b> <a class=i3>/xpop -f [MENU] [</a><a href="#7">N N .. N</a><a class=i3>]</a><br /><br />
<b>Example:</b> <a class=i3>/xpop -f mymenu 1 1</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="9.8" href=#>-i</a><hr><br />
This command lets you change the icon on a menu item.<br /><br />

<b>Command:</b> <a class=i3>/xpop -i [MENU] [</a><a href="#7">N N .. N</a><a class=i3>] [TAB] [ICON]</a><br /><br />
<b>Example:</b> <a class=i3>/xpop -i mymenu 1 1 $chr(9) 3</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="9.18" href=#>-s</a><hr><br />
This command lets you change the state flags on an item (see <a href="#9.1">/xpop -a</a> for the switches).<br /><br />

<b>Command:</b> <a class=i3>/xpop -s [MENU] [</a><a href="#7">N N .. N</a><a class=i3>] [TAB] [+FLAGS]</a><br /><br />
<b>Example:</b> <a class=i3>/xpop -s mymenu 1 1 $chr(9) +cg</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="9.19" href=#>-t</a><hr><br />
This command lets you change a menu item text.<br /><br />

<b>Command:</b> <a class=i3>/xpop -t [MENU] [</a><a href="#7">N N .. N</a><a class=i3>] [TAB] ItemText</a><br /><br />
<b>Example:</b> <a class=i3>/xpop -t mymenu 1 1 $chr(9) $eval($me,0)</a><br /><br />
</p>

<a class=i2>N.B.</a> Remember to use mIRC's $eval(expression,0) to prevent the mIRC evaluation of the $idents that your text contains.

<!-- Section 5 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="5" href=#>$xpop Identifier</a><hr class=t><br />
The $xpop identifier is a given mIRC alias that communicates with the XPopup DLL to extract information in XPopup menu items.</a>)
<br /><br />

<p align=justify><a><b>• </b></a> <a name="5.1" href=#>num</a><hr><br />
This property retrieves the number of menu items in a submenu.<br /><br />

<b>Identifier:</b> <a class=i3>$xpop(menu, <a href="#7">N N .. N</a>).enabled</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xpop(mymenu, 4).enabled</a><br /><br />

<a class=i2>N.B.</a> The path N N .. N can be <a class=i>root</a> to the number of items on the root menu.
</p>

<p align=justify><a><b>• </b></a> <a name="5.2" href=#>text</a><hr><br />
This property retrieves the menu item text.<br /><br />

<b>Identifier:</b> <a class=i3>$xpop(menu, <a href="#7">N N .. N</a>).text</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xpop(mymenu, 4).text</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="5.3" href=#>icon</a><hr><br />
This property retrieves the menu item icon index number.<br /><br />

<b>Identifier:</b> <a class=i3>$xpop(menu, <a href="#7">N N .. N</a>).icon</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xpop(mymenu, 4).icon</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="5.4" href=#>checked</a><hr><br />
This property retrieves if a menu item is checked or not.<br /><br />

<b>Identifier:</b> <a class=i3>$xpop(menu, <a href="#7">N N .. N</a>).checked</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xpop(mymenu, 4).checked</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="5.5" href=#>enabled</a><hr><br />
This property retrieves if a menu item is enabled or disabled.<br /><br />

<b>Identifier:</b> <a class=i3>$xpop(menu, <a href="#7">N N .. N</a>).enabled</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xpop(mymenu, 4).enabled</a><br /><br />
</p>

<p align=justify><a><b>• </b></a> <a name="5.6" href=#>submenu</a><hr><br />
This property retrieves if a menu item has a submenu or not.<br /><br />

<b>Identifier:</b> <a class=i3>$xpop(menu, <a href="#7">N N .. N</a>).submenu</a><br /><br />
<b>Example:</b> <a class=i3>//echo -a $xpop(mymenu, 4).submenu</a><br /><br />
</p>

<!-- Section 7 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="7" href=#>XPopup Item Path</a><hr class=t><br />
The xpopup menus have an engin that parses the given item "path" data to know where to insert/delete/modify a 
given item in the menu structure. The parameters you supply are a space separated numerical token list of the 
menu submenus that lead to the menu item position :<br /><br />

<b>Format:</b> <a class=i3>N N N ... N</a><br /><br />

For example : 2 3<br /><br />

This position represents the 3rd menu item of the of the second menu item submenu as shown by the selected item in the 
picture below:<br /><br />

<center><img src="../images/xpopup2.png" alt="XPopup Item Path Example"/></center>

<a class=i2>N.B.</a> If you specify a path that does not exist parsing halts and an error is displayed.<br />
<a class=i2>N.B.</a> You can use <a class=i>0</a> for the last value when inserting a menu item to insert it at the end of the menu.
</p>

<!-- Section 8 -->

<p align=justify><a><b>&gt;&gt;</b></a> <a class=i name="8" href=#>XPopup Events</a><hr class=t><br />
Events are sent through mIRC's <a class=i>ON SIGNAL</a> event with the signal name being <a class=i>xpopup-[MENU]</a> where [MENU] is the menu name that
sent the event. The <a class=i>$1</a> parameter is the supplied [ID] of the menu item and you see why it's important that this number be unique. A 
returned value of <a class=i>0</a> means no selection was made in the menu.
<br /><br />
</p>

<br /></td>
<td>&nbsp;</td><td><nobr>
<a class=i href="#3">Special Menus</a><br />
<br />
<a class=i href="#10">/xpopup Command</a><br />
• <a href="#10.2">-b</a><br />
• <a href="#10.3">-c</a><br />
• <a href="#10.4">-d</a><br />
• <a href="#10.9">-i</a><br />
• <a href="#10.10">-j</a><br />
• <a href="#10.12">-l</a><br />
• <a href="#10.16">-p</a><br />
• <a href="#10.19">-s</a><br />
• <a href="#10.20">-t</a><br />
• <a href="#10.24">-x</a><br />
<br />
<a class=i href="#11">$xpopup Identifier</a><br />
• <a href="#11.1">ismenu</a><br />
• <a href="#11.2">style</a><br />
• <a href="#11.3">exstyle</a><br />
• <a href="#11.4">colors</a><br />
• <a href="#11.5">color</a><br />
<br />
<a class=i href="#9">/xpop Command</a><br />
• <a href="#9.1">-a</a><br />
• <a href="#9.3">-c</a><br />
• <a href="#9.4">-d</a><br />
• <a href="#9.6">-f</a><br />
• <a href="#9.8">-i</a><br />
• <a href="#9.18">-s</a><br />
• <a href="#9.19">-t</a><br />
<br />
<a class=i href="#5">$xpop Identifier</a><br />
• <a href="#5.1">num</a><br />
• <a href="#5.2">text</a><br />
• <a href="#5.3">icon</a><br />
• <a href="#5.4">checked</a><br />
• <a href="#5.5">enabled</a><br />
• <a href="#5.6">submenu</a><br />
<br />
<a class=i href="#7">XPopup Item Path</a><br />
<br />
<a class=i href="#8">XPopup Events</a><br />
</nobr></td></tr></table>
<br /></td></tr></table>
<table class=bar width=100%><tr>
<td width=33% align=left><nobr><a href='index.htm'> Tha... Help </a></nobr></td>
<td width=33% align=center><nobr><b>&copy; 2005</b></nobr></td>
<td width=33% align=right><nobr><a href='mailto:clickhere@scriptsdb.org'>Contact</a></nobr></td>
</tr></table><br />
</body></html>